@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Home Page";

}
@model IEnumerable<Article>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1 class="display-4">Welcome on the "Blog"!</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <p>Dashboard <a asp-controller="Dashboard" asp-action="Index"> Dashboard</a>.</p>
    <form asp-controller="Home"  asp-action="SearchString" method="get">
        <p>
            Keyword: <input type="text" name="word" />
            <input type="submit" />
            <br>
        </p>
    </form>
    5 newest or searched article!

    @if (Model.Any())
    {

        @foreach (var x in Model.OrderBy(x => x.PublishDate).Take(5).Reverse())
        {

            <ul>
                <a asp-controller="Article" asp-action="Index" asp-route-Id=@x.Id>@x.Title</a>
            </ul>

        }

    }
    else
    {
        <textarea>There is no aticles!</textarea>
    }
</div>